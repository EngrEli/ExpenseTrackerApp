{"version":3,"sources":["reducers/accountReducer.js","reducers/expenseReducer.js","reducers/incomeReducer.js","reducers/index.js","store.js","components/CreateAccount.js","actions/index.js","components/AddExpense.js","components/AddIncome.js","components/AddTransaction.js","components/ShowAccount.js","components/Home.js","App.js","index.js"],"names":["initState","account","isLoading","accountReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","filter","accounts","_id","expense","expenseReducer","income","incomeReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","CreateAccount","accountName","startingAmount","showCreateAccountForm","accountNameError","amountError","handleShowCreate","_this","setState","handleHideCreateForm","handleFormCreateState","e","defineProperty","target","name","value","validate","handleCreateAccountSubmit","isValid","preventDefault","_this$state","newAccount","props","addAccount","swal","title","text","icon","timer","buttons","_this2","this","createAccountForm","react_default","a","createElement","renderprops","from","opacity","to","config","duration","className","style","display","flexDirection","Input","onChange","Button","onClick","marginLeft","Fragment","disabled","Component","connect","input","dispatch","axios","post","then","res","data","AddExpense","category","description","categoryName","amount","descriptionError","handleInputChange","handleAmountChange","handleCategoryChange","handleCreateExpenseSubmit","newExpense","addExpense","console","log","showAddTransactionForm","required","autoFocus","map","items","index","key","handleHideAddExpense","AddIncome","handleCreateIncomeSubmit","newIncome","trim","addIncome","handleHideAddIncome","AddTransaction","showAddExpense","showAddIncome","handleShowAddExpense","handleShowAddIncome","border","borderTop","paddingTop","justifyContent","tabIndex","components_AddIncome","components_AddExpense","ShowAccount","showAccounts","handleShowAccounts","handleAccountChange","handleHideAccountData","delete","id","dangerMode","willDelete","deleteAccount","handleDeleteExpense","deleteExpense","handleDeleteIncome","deleteIncome","itemsLoading","getAccounts","getIncomes","getExpenses","expenseDisplay","expenses","_ref","float","bind","color","incomeDisplay","incomes","_ref2","totalExpense","item","reduce","acc","init","totalIncome","initVal","showAccountData","FormGroup","Label","for","marginTop","textAlign","padding","AddTransaction_AddTransaction","get","Home","components_CreateAccount","components_ShowAccount","App","button","react_router_dom","react_router","es","exact","path","component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.c8dcab8e.chunk.js","sourcesContent":["// reducer is where the state would come from\r\n\r\nconst initState={\r\n    account: [],\r\n    // this is for loading purposes\r\n    isLoading: null,\r\n}\r\nconst accountReducer = (state= initState, action)=>{\r\n    switch(action.type){\r\n        case \"GET_ACCOUNTS\":\r\n            return {\r\n                ...state,\r\n                account: action.payload,\r\n                isLoading: false\r\n            }\r\n        case \"ADD_ACCOUNT\":\r\n            return {\r\n                ...state,\r\n                account: [...state.account, action.payload]\r\n            }\r\n        case \"DELETE_ACCOUNT\":\r\n            return{\r\n                ...state,\r\n                account: state.account.filter(accounts=> accounts._id !== action.payload)\r\n            }\r\n        case \"ITEMS_LOADING\":\r\n            return{\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\nexport default accountReducer","// reducer is where the state would come from\r\n\r\nconst initState={\r\n    expense: []\r\n}\r\nconst expenseReducer = (state= initState, action)=>{\r\n    switch(action.type){\r\n        case \"GET_EXPENSES\":\r\n            return {\r\n                ...state,\r\n                expense: action.payload,\r\n            }\r\n        case \"ADD_EXPENSE\":\r\n            return {\r\n                ...state,\r\n                expense: [action.payload, ...state.expense]\r\n            }\r\n        case \"DELETE_EXPENSE\": \r\n            return {\r\n                ...state,\r\n                expense: state.expense.filter( expense => expense._id !== action.payload)\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\nexport default expenseReducer","// reducer is where the state would come from\r\n\r\nconst initState={\r\n    income: []\r\n}\r\nconst incomeReducer = (state= initState, action)=>{\r\n    switch(action.type){\r\n        case \"GET_INCOMES\":\r\n            return {\r\n                ...state,\r\n                income: action.payload,\r\n            }\r\n        case \"ADD_INCOME\":\r\n            return {\r\n                ...state,\r\n                income: [action.payload, ...state.income]\r\n            }\r\n        case \"DELETE_INCOME\": \r\n            return {\r\n                ...state,\r\n                income: state.income.filter( income => income._id !== action.payload)\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\nexport default incomeReducer","import { combineReducers } from \"redux\"\r\nimport accountReducer from \"./accountReducer\"\r\nimport expenseReducer from \"./expenseReducer\"\r\nimport incomeReducer  from \"./incomeReducer\"\r\n\r\nexport default combineReducers({\r\n    accountReducer,\r\n    expenseReducer,\r\n    incomeReducer\r\n})\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst initialState= {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState,compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store ","import React, { Component } from 'react'\r\nimport swal from \"sweetalert\"\r\nimport { addAccount } from \"../actions\"\r\nimport { connect } from \"react-redux\"\r\nimport {Spring} from \"react-spring/renderprops\"\r\n\r\nimport {\r\n    Button,\r\n    Input,\r\n} from \"reactstrap\"\r\n\r\n// const Form = ()=>{\r\n//     return(\r\n//         <Spring\r\n//             from={{opacity: 0}}\r\n//             to={{opacity:1}}\r\n//         >\r\n//             {props =>{\r\n//                 <div style={props}>\r\n//                     <div className=\"container-border\"style={props} >\r\n//                         <form style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n//                             Account Name\r\n//                             <Input \r\n//                                 type=\"name\" \r\n//                                 onChange={this.handleFormCreateState} \r\n//                                 value={this.state.accountName}\r\n//                                 name=\"accountName\"\r\n//                             />\r\n//                             <div className=\"error\">{this.state.accountNameError}</div>\r\n//                             Starting Amount\r\n//                             <Input \r\n//                                 type=\"number\" \r\n//                                 onChange={this.handleFormCreateState} \r\n//                                 value={this.state.startingAmount}\r\n//                                 name=\"startingAmount\"\r\n//                             />\r\n//                             <div className=\"error\">{this.state.amountError}</div>\r\n//                             <Button \r\n//                                 type=\"submit\"\r\n//                                 className=\"margin-top-bot\" \r\n//                                 onClick={this.handleCreateAccountSubmit}\r\n//                             >Submit<i style={{marginLeft:\"7px\"}} className=\"angle double right icon\"></i>\r\n//                             </Button>\r\n//                             <Button \r\n//                                 onClick={this.handleHideCreateForm} \r\n//                                 className=\"margin-top-bot\" \r\n//                                 > Cancel\r\n//                             </Button> \r\n//                         </form>     \r\n//                     </div>\r\n//                 </div>\r\n//             }}\r\n//         </Spring>\r\n//     )\r\n// }\r\n\r\nclass CreateAccount extends Component {\r\n    state={\r\n        accountName:\"\",\r\n        startingAmount:\"\",\r\n        showCreateAccountForm : false,\r\n        // for form validation\r\n        accountNameError:\"\",\r\n        amountError:\"\"\r\n    }\r\n    // when Create account button is clicked, the account form will show\r\n    handleShowCreate = ()=>{\r\n        this.setState({\r\n            showCreateAccountForm: true\r\n        })\r\n    }\r\n    // when cancel button was clicked , the account form will be hidden\r\n    handleHideCreateForm = ()=>{\r\n        this.setState({\r\n            showCreateAccountForm: false,\r\n            accountName:\"\",\r\n            startingAmount:\"\"\r\n        })\r\n    }\r\n    // save input value of Create account form to the state\r\n    handleFormCreateState = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    // ======= =============================================\r\n    // validate account info\r\n    validate=()=>{\r\n        let accountNameError = \"\"\r\n        let amountError     = \"\"\r\n        // description error\r\n        if(!this.state.accountName ){\r\n            accountNameError = true\r\n        }\r\n        \r\n        if(accountNameError){\r\n            return false\r\n        }\r\n        // amount error handling\r\n        if(!this.state.startingAmount || this.state.startingAmount === \"\"){\r\n            amountError= true\r\n        }\r\n        if(this.state.startingAmount <= 0){\r\n            amountError = true\r\n        }\r\n        if(amountError){\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    // ====================================================\r\n    // submit create account info\r\n    handleCreateAccountSubmit = (e)=>{\r\n        const isValid = this.validate()\r\n        e.preventDefault()\r\n        if(isValid){\r\n            const {accountName, startingAmount }= this.state \r\n            const newAccount = {\r\n                accountName,\r\n                startingAmount\r\n            }\r\n            // console.log(newAccount)\r\n            this.props.addAccount(newAccount)\r\n            this.setState({\r\n                accountName:\"\",\r\n                startingAmount:\"\",\r\n                showCreateAccountForm: false,\r\n            })\r\n            swal({\r\n                title: \"Successful!\",\r\n                text:\"You Created an Account!\",\r\n                icon:\"success\",\r\n                timer:1000,\r\n                buttons:false\r\n            })\r\n        }else{\r\n            swal(\"Error!\", \"Don't leave the form blank  |  Negative amounts are invalid\", \"error\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const createAccountForm =\r\n        // spring animation\r\n            <Spring \r\n                from={{opacity:0}}\r\n                to={{opacity:1}}\r\n                config={{duration:1400}}\r\n            >\r\n                {props=>(\r\n                    <div className=\"container-border\" style={props}>\r\n                        <form style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n                            Account Name\r\n                            <Input \r\n                                type=\"name\" \r\n                                onChange={this.handleFormCreateState} \r\n                                value={this.state.accountName}\r\n                                name=\"accountName\"\r\n                            />\r\n                            <div className=\"error\">{this.state.accountNameError}</div>\r\n                            Starting Amount\r\n                            <Input \r\n                                type=\"number\" \r\n                                onChange={this.handleFormCreateState} \r\n                                value={this.state.startingAmount}\r\n                                name=\"startingAmount\"\r\n                            />\r\n                            <div className=\"error\">{this.state.amountError}</div>\r\n                            <Button \r\n                                type=\"submit\"\r\n                                className=\"margin-top-bot\" \r\n                                onClick={this.handleCreateAccountSubmit}\r\n                            >Submit<i style={{marginLeft:\"7px\"}} className=\"angle double right icon\"></i>\r\n                            </Button>\r\n                            <Button \r\n                                onClick={this.handleHideCreateForm} \r\n                                className=\"margin-top-bot\" \r\n                                > Cancel\r\n                            </Button> \r\n                        </form> \r\n                    </div>\r\n                )}\r\n                \r\n            </Spring>\r\n\r\n        const { showCreateAccountForm } = this.state\r\n            \r\n        return (\r\n            <>\r\n                <div className=\"button-margin\">\r\n                    <button className=\"button-margin ui basic button\" \r\n                        onClick={this.handleShowCreate} \r\n                        disabled={showCreateAccountForm}>\r\n                            Create Account <i style={{marginLeft:\"5px\"}} \r\n                            className=\"user plus icon\"></i>\r\n                    </button>\r\n                </div>\r\n                {/* if clicked ,show form and then disable the button */}\r\n                {showCreateAccountForm ? createAccountForm : null }\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, {addAccount})(CreateAccount)","import axios from \"axios\"\r\n\r\nexport const getAccounts = () => dispatch =>{\r\n    axios\r\n        .get(\"/account\")\r\n        .then(res =>\r\n            dispatch({\r\n                type: \"GET_ACCOUNTS\",\r\n                // res.data is coming from the data on the routes/api \r\n                payload: res.data\r\n            })\r\n        )\r\n}\r\n\r\nexport const itemsLoading = ()=>({\r\n    type: \"ITEMS_LOADING\"\r\n})\r\n\r\nexport const addAccount = input => dispatch =>{\r\n    axios\r\n        .post(\"/account/add\", input)\r\n        .then(res =>\r\n            dispatch({\r\n                type: \"ADD_ACCOUNT\",\r\n                // res.data is coming from the data on the routes/api \r\n                payload: res.data\r\n            })\r\n        )\r\n}\r\n\r\nexport const deleteAccount = id => dispatch =>{\r\n    axios\r\n        .delete(`/account/${id}`)\r\n        .then(res=>\r\n            dispatch({\r\n                type:\"DELETE_ACCOUNT\",\r\n                payload: id\r\n            })    \r\n        )\r\n}\r\n// ===============================================\r\n// EXPENSES\r\nexport const addExpense = input => dispatch =>{\r\n    axios\r\n        .post(\"/expense/add\", input)\r\n        .then(res=>\r\n            dispatch({\r\n                type:\"ADD_EXPENSE\",\r\n                payload: res.data\r\n            })    \r\n        )\r\n}\r\nexport const getExpenses = () => dispatch =>{\r\n    axios\r\n        .get(\"/expense\")\r\n        .then(res =>\r\n            dispatch({\r\n                type: \"GET_EXPENSES\",\r\n                // res.data is coming from the data on the routes/api \r\n                payload: res.data\r\n            })\r\n        )\r\n}\r\n\r\nexport const deleteExpense = (id) =>dispatch=>{\r\n    axios  \r\n        .delete(`/expense/${id}`)\r\n        .then(res=>\r\n            dispatch({\r\n                type: \"DELETE_EXPENSE\",\r\n                payload:id\r\n            })\r\n        )\r\n}\r\n\r\n// ===============================================\r\n\r\n// INCOME \r\nexport const getIncomes = ()=> dispatch =>{\r\n    axios\r\n        .get(\"/income\")\r\n        .then(res=>{\r\n            dispatch({\r\n                type:\"GET_INCOMES\",\r\n                payload: res.data\r\n            })\r\n        })\r\n}\r\nexport const addIncome = (income)=> dispatch =>{\r\n    axios\r\n        .post(\"/income/add\" , income)\r\n        .then(res=>{\r\n            dispatch({\r\n                type:\"ADD_INCOME\",\r\n                payload: res.data\r\n            })\r\n        })\r\n}\r\nexport const deleteIncome = (id)=> dispatch=>{\r\n    axios\r\n        .delete(`/income/${id}`)\r\n        .then(res=>{\r\n            dispatch({\r\n                type: \"DELETE_INCOME\",\r\n                payload: id\r\n            })\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { addExpense } from \"../actions\"\r\nimport {\r\n    Button,\r\n    Input\r\n} from \"reactstrap\"\r\nimport swal from \"sweetalert\"\r\n\r\nclass AddExpense extends Component {\r\n    state={\r\n        // showAddTransactionForm: false,\r\n        category: [\r\n            \"Clothing\",\r\n            \"Education\",\r\n            \"Food and Drink\",\r\n            \"HealthCare\",\r\n            \"Transportation\",\r\n            \"Extra\",\r\n            \"Shopping\"\r\n        ],\r\n        description: \"\",\r\n        categoryName:\"Clothing\",\r\n        amount:\"\",\r\n        descriptionError:\"\",\r\n        amountError:\"\"\r\n    }\r\n    // for description and amount input\r\n    handleInputChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleAmountChange = (e)=>{\r\n        this.setState({\r\n            amount: e.target.value,\r\n        })\r\n    }\r\n    handleCategoryChange = (e)=>{\r\n        this.setState({\r\n            categoryName: e.target.value\r\n        })\r\n    }\r\n    // ======= =============================================\r\n    validate=()=>{\r\n        let descriptionError = \"\"\r\n        let amountError     = \"\"\r\n        // description error\r\n        if(!this.state.description){\r\n            descriptionError = true\r\n        }\r\n        if(descriptionError){\r\n            return false\r\n        }\r\n        // amount error handling\r\n        if(!this.state.amount){\r\n            amountError= true\r\n        }\r\n        if(this.state.amount<=0){\r\n            amountError = true\r\n        }\r\n        if(amountError){\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    // ====================================================\r\n    handleCreateExpenseSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const isValid = this.validate();\r\n\r\n        if(isValid){\r\n            const newExpense = {\r\n                description: this.state.description,\r\n                category:   this.state.categoryName,\r\n                amount:     this.state.amount,\r\n                account:    this.props.accountName\r\n            }\r\n            this.props.addExpense(newExpense)\r\n            console.log(newExpense)\r\n            swal({\r\n                title: \"Successful!\",\r\n                text:\"A new expense has been created!\",\r\n                icon:\"success\",\r\n                timer:1000,\r\n                buttons:false\r\n            })\r\n            this.setState({\r\n                description:\"\",\r\n                amount:\"\",\r\n                showAddTransactionForm: false,\r\n            })\r\n        }else{\r\n            swal(\"Error!\", \"Don't leave the form blank  |  Negative amounts are invalid\", \"error\")\r\n        }\r\n    }\r\n    render() {\r\n        const {category,amount, description} = this.state\r\n\r\n        return (\r\n            <>  \r\n                <h1>Add Expense</h1>\r\n                <form style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n                    Description\r\n                    <Input \r\n                        type=\"name\" \r\n                        required \r\n                        name=\"description\"\r\n                        value={description}\r\n                        onChange={this.handleInputChange}\r\n                        autoFocus={true}\r\n                    />\r\n                    Category\r\n                    <Input \r\n                        type=\"select\" \r\n                        required \r\n                        name=\"category\"\r\n                        onChange={this.handleCategoryChange}\r\n                    >   \r\n                        {category.map((items,index)=>{\r\n                            return (\r\n                                <option key={index} value={items}>{items}</option>\r\n                            )\r\n                        })}\r\n                    </Input>\r\n                    Amount\r\n                    <Input \r\n                        type=\"number\" \r\n                        required \r\n                        value={amount}\r\n                        name=\"amount\"\r\n                        onChange={this.handleAmountChange}\r\n                    />\r\n                    {/* --------- */}\r\n                    <Button \r\n                        type=\"submit\"\r\n                        className=\"margin-top-bot\" \r\n                        onClick={this.handleCreateExpenseSubmit}\r\n                        >Submit<i style={{marginLeft:\"7px\"}} className=\"angle double right icon\"></i>\r\n                    </Button>\r\n                    <Button \r\n                        onClick={this.props.handleHideAddExpense} \r\n                        className=\"margin-top-bot\" \r\n                        > Cancel\r\n                    </Button> \r\n                </form> \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addExpense})(AddExpense)","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { addIncome } from \"../actions\"\r\nimport {\r\n    Button,\r\n    Input\r\n} from \"reactstrap\"\r\nimport swal from \"sweetalert\"\r\nconst initState = {\r\n    description: \"\",\r\n    amount:\"\",\r\n    descriptionError: \"\",\r\n    amountError:\"\"\r\n}\r\nclass AddIncome extends Component {\r\n    state = initState\r\n\r\n    handleInputChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAmountChange = (e)=>{\r\n        this.setState({\r\n            amount: e.target.value,\r\n        })\r\n    }\r\n    handleCategoryChange = (e)=>{\r\n        this.setState({\r\n            categoryName: e.target.value\r\n        })\r\n    }\r\n    // ======= =============================================\r\n    validate=()=>{\r\n        let descriptionError = \"\"\r\n        let amountError     = \"\"\r\n        // description error\r\n        if(!this.state.description){\r\n            descriptionError = true\r\n        }\r\n        if(descriptionError){\r\n            this.setState({ descriptionError})\r\n            return false\r\n        }\r\n        \r\n        // amount error handling\r\n        if(!this.state.amount){\r\n            amountError = true\r\n        }\r\n        if(this.state.amount<=0){\r\n            amountError = true\r\n        }\r\n        // if(this.state.amount <= 0 ){\r\n        //     amountError= \"Invalid amount , please enter a positive amount for income\"\r\n        // }\r\n        if(amountError){\r\n            this.setState({amountError})\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n    // ====================================================\r\n\r\n    handleCreateIncomeSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const isValid = this.validate();\r\n\r\n        if(isValid){\r\n            const newIncome = {\r\n                description: this.state.description.trim(),\r\n                amount:     this.state.amount,\r\n                account:    this.props.accountName\r\n            }\r\n            this.props.addIncome(newIncome)\r\n            console.log(newIncome)\r\n            this.setState(initState)\r\n            swal({\r\n                title: \"Successful!\",\r\n                text:\"A new income has been created!\",\r\n                icon:\"success\",\r\n                timer:1000,\r\n                buttons:false\r\n            })\r\n        }else{\r\n            swal(\"Error!\", \"Don't leave the form blank  |  Negative amounts are invalid\", \"error\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {amount, description} = this.state\r\n        return (\r\n            <>  \r\n                <h1>Add Income</h1>\r\n                <form style={{ display:\"flex\", flexDirection: \"column\"}}>\r\n                    Description\r\n                    <Input \r\n                        type=\"name\" \r\n                        required \r\n                        name=\"description\"\r\n                        value={description}\r\n                        onChange={this.handleInputChange}\r\n                        autoFocus={true}\r\n                    />\r\n                    {/* --------- */}\r\n                    Amount\r\n                    <Input \r\n                        type=\"number\" \r\n                        required \r\n                        value={amount}\r\n                        name=\"amount\"\r\n                        onChange={this.handleAmountChange}\r\n                    />\r\n                    {/* --------- */}\r\n                    <Button \r\n                        type=\"submit\"\r\n                        className=\"margin-top-bot\" \r\n                        onClick={this.handleCreateIncomeSubmit}\r\n                        >Submit<i style={{marginLeft:\"7px\"}} className=\"angle double right icon\"></i>\r\n                    </Button>\r\n                    {/* --------- */}\r\n                    <Button \r\n                        onClick={this.props.handleHideAddIncome} \r\n                        className=\"margin-top-bot\" \r\n                        > Cancel\r\n                    </Button> \r\n                </form> \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {addIncome})(AddIncome)","import React, { Component } from 'react'\r\nimport AddExpense from \"./AddExpense\"\r\nimport AddIncome  from \"./AddIncome\"\r\n\r\nexport default class AddTransaction extends Component {\r\n    state={\r\n        showAddExpense: false,\r\n        showAddIncome: false\r\n    }\r\n    // ===============================\r\n    // handleShowAddExpense\r\n    handleShowAddExpense = ()=>{\r\n        this.setState({\r\n            showAddExpense: true,\r\n            showAddIncome: false\r\n        })\r\n    }\r\n    handleHideAddExpense = ()=>{\r\n        this.setState({\r\n            showAddExpense: false\r\n        })\r\n    }\r\n    // ===============================\r\n    // ===============================\r\n    // handleShowAddIncome\r\n    handleShowAddIncome = ()=>{\r\n        this.setState({\r\n            showAddIncome: true,\r\n            showAddExpense: false\r\n        })\r\n    }\r\n    handleHideAddIncome =()=>{\r\n        this.setState({\r\n            showAddIncome: false\r\n        })\r\n    }\r\n    // ===============================\r\n    render() {\r\n        return (\r\n            <div style={{border:\"none\", borderTop:\"1px solid black\", paddingTop:\"15px\"}}>\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <div className=\"ui animated negative button mini\" tabIndex=\"0\" >\r\n                        <div className=\"visible content\">Add Expense</div>\r\n                        <div className=\"hidden content\" onClick={this.handleShowAddExpense}>\r\n                            <i className=\"plus circle icon\"  ></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ui animated positive button mini\" tabIndex=\"0\">\r\n                        <div className=\"visible content\">Add Income</div>\r\n                        <div className=\"hidden content\" onClick={this.handleShowAddIncome}>\r\n                            <i className=\"plus circle icon\"  ></i>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                {\r\n                    this.state.showAddIncome?\r\n                        <AddIncome\r\n                            accountName={this.props.accountName} \r\n                            handleHideAddIncome={this.handleHideAddIncome}\r\n                        />  :\r\n                        null\r\n                }\r\n                 {\r\n                    this.state.showAddExpense? \r\n                        <AddExpense \r\n                            accountName={this.props.accountName} \r\n                            // i passed in hideprops for the form to be closed\r\n                            handleHideAddExpense={this.handleHideAddExpense}\r\n                        /> : \r\n                        null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { \r\n    getAccounts , \r\n    itemsLoading,deleteAccount , \r\n    getExpenses, \r\n    deleteExpense, \r\n    getIncomes,\r\n    deleteIncome\r\n} from \"../actions\"\r\nimport AddTransaction from \"./AddTransaction\"\r\nimport { connect } from \"react-redux\"\r\nimport swal from \"sweetalert\"\r\nimport {\r\n    Button,\r\n    Input,\r\n    FormGroup,\r\n    Label\r\n} from \"reactstrap\"\r\n\r\nclass ShowAccount extends Component {\r\n    // ==================================================================\r\n    state={\r\n        showAccounts   : false,\r\n        account:\"\",\r\n        showAddExpense: false,\r\n        showAddIncome: false\r\n    }\r\n    // ==================================================================\r\n    componentDidMount(){\r\n        // when the component renders and the accounts are not fetched\r\n        // loading data\r\n        this.props.itemsLoading()\r\n        \r\n        // this props will load accounts and expenses at the render\r\n        this.props.getAccounts();\r\n        // get income\r\n        this.props.getIncomes();\r\n        // get expenses\r\n        this.props.getExpenses();\r\n        // i cant console.log data from the reducer\r\n        // console.log(`accounts : ${this.props.accounts.account}`)\r\n    }\r\n    // ==================================================================\r\n    handleShowAccounts = ()=>{\r\n        this.setState({\r\n            showAccounts:true\r\n        })\r\n    }\r\n    // ==================================================================\r\n    // when selecting an item on a select input , changes the state also\r\n    handleAccountChange = (e)=>{\r\n        this.setState({\r\n            account: e.target.value\r\n        })\r\n    }\r\n    // ==================================================================\r\n    // close the show account component\r\n    handleHideAccountData = ()=>{\r\n        this.setState({\r\n            showAccounts:false,\r\n            account:\"\"\r\n        })\r\n    }\r\n    // ==================================================================\r\n    // delete the account\r\n    delete =(id)=>{\r\n        // from sweetalert package\r\n        return swal({\r\n            title: \"Are you sure?\",\r\n            text:\"Once deleted, you will not be able to recover it anymore\",\r\n            icon: \"warning\", \r\n            buttons: true,\r\n            dangerMode: true\r\n        })\r\n        .then(willDelete=>{\r\n            if(willDelete){\r\n                // delete the data in the database\r\n                this.props.deleteAccount(id)\r\n                this.setState({\r\n                    account:\"\"\r\n                })\r\n                swal(\"Account has been deleted!\",{icon:\"success\",buttons:false,timer:1000})\r\n            }\r\n            else{\r\n                swal(\"Account remains\")\r\n            }\r\n        })\r\n    }\r\n    // ==================================================================\r\n    handleDeleteExpense = (id)=>{\r\n        // from sweetalert package\r\n        return swal({\r\n            title: \"Are you sure?\",\r\n            text:\"Once deleted, you will not be able to recover it anymore\",\r\n            icon: \"warning\", \r\n            buttons: true,\r\n            dangerMode: true\r\n        })\r\n        .then(willDelete=>{\r\n            if(willDelete){\r\n                // delete the data in the database\r\n                this.props.deleteExpense(id)\r\n                swal(\"Expense has been deleted!\",{icon:\"success\",buttons:false,timer:1000})\r\n            }\r\n            else{\r\n                swal(\"Expense remains\")\r\n            }\r\n        })\r\n    }\r\n    // ==================================================================\r\n    handleDeleteIncome = (id)=>{\r\n        // from sweetalert package\r\n        return swal({\r\n            title: \"Are you sure?\",\r\n            text:\"Once deleted, you will not be able to recover it anymore\",\r\n            icon: \"warning\", \r\n            buttons: true,\r\n            dangerMode: true\r\n        })\r\n        .then(willDelete=>{\r\n            if(willDelete){\r\n                // delete the data in the database\r\n                this.props.deleteIncome(id)\r\n                swal(\"Income has been deleted!\",{icon:\"success\",buttons:false,timer:1000})\r\n            }\r\n            else{\r\n                swal(\"Income remains\")\r\n            }\r\n        })\r\n    }\r\n    // ==================================================================\r\n    // ===============================\r\n    // handleShowAddExpense\r\n    handleShowAddExpense = ()=>{\r\n        this.setState({\r\n            showAddExpense: true,\r\n            showAddIncome: false\r\n        })\r\n    }\r\n    handleHideAddExpense = ()=>{\r\n        this.setState({\r\n            showAddExpense: false\r\n        })\r\n    }\r\n    // ===============================\r\n    // ===============================\r\n    // handleShowAddIncome\r\n    handleShowAddIncome = ()=>{\r\n        this.setState({\r\n            showAddIncome: true,\r\n            showAddExpense: false\r\n        })\r\n        console.log(\"clicked\")\r\n    }\r\n    handleHideAddIncome =()=>{\r\n        this.setState({\r\n            showAddIncome: false\r\n        })\r\n    }\r\n    // ===============================\r\n    render() {\r\n        \r\n        // ==================================================================\r\n        // displays the expenses under an account\r\n        const expenseDisplay = \r\n        // i destructured it \r\n            this.props.expenses.expense.map(({description, _id, amount, account, category})=>{\r\n                // when account inside the global state is the same with the internal state account\r\n                return account === this.state.account &&\r\n                <>\r\n                    <div key={_id }>\r\n                        <div style={{float:\"right\",marginLeft:\"25px\"}}className=\"ui animated negative button mini\" tabIndex=\"0\">\r\n                            <div className=\"visible content\">Delete</div>\r\n                            <div className=\"hidden content\" onClick={this.handleDeleteExpense.bind(this,_id)}>\r\n                                <i className=\"trash alternate outline icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                            <div className=\"heading\">{description}</div> \r\n                            <div style={{color:\"red\"}}>-P{amount}</div>\r\n                            <div style={{color:\"gray\"}}>{category}</div>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                </>\r\n        })\r\n        // ==================================================================\r\n        // all income display from a single account\r\n        const incomeDisplay = \r\n            this.props.incomes.income.map(({description,_id, account,amount, category})=>{\r\n                return account === this.state.account && \r\n                    <div key={_id}>\r\n                        <div style={{float:\"right\", marginLeft:\"25px\"}}className=\"ui animated negative button mini\" tabIndex=\"0\">\r\n                            <div className=\"visible content\">Delete</div>\r\n                            <div className=\"hidden content\" onClick={this.handleDeleteIncome.bind(this,_id)}>\r\n                                <i className=\"trash alternate outline icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                            <div className=\"heading\">{description}</div> \r\n                            <div style={{color:\"green\"}}>+P{amount}</div>\r\n                        </div>\r\n                    </div>\r\n            })\r\n        // ==================================================================\r\n        // all expenses added inside a single account\r\n        const totalExpense = \r\n            this.props.expenses.expense\r\n            .filter(expense=> {\r\n                return expense.account === this.state.account\r\n                })\r\n            .map(item=>item.amount)\r\n            .reduce((acc,init)=> acc+init,0)\r\n        \r\n        const totalIncome =\r\n            this.props.incomes.income\r\n            .filter(income=>{\r\n                return income.account === this.state.account\r\n            })\r\n            .map(item => item.amount)\r\n            .reduce((acc, initVal)=> acc+initVal , 0)\r\n        // ==================================================================\r\n        // form for accounts \r\n        const showAccountData = \r\n                <FormGroup className=\"container-border\" >\r\n                    <Label for=\"select\">Accounts</Label>\r\n                        <Input\r\n                            type=\"select\" \r\n                            // change  the handle change event handler\r\n                            onChange={this.handleAccountChange}\r\n                            value={this.state.account}\r\n                            required\r\n                            name=\"account\"\r\n                        >\r\n                            <option value=\"\" disabled={true}>Select Account</option>\r\n                        {\r\n                            this.props.accounts.account.map(items=>{\r\n                                // deconstruct\r\n                                const {_id, accountName} = items\r\n                                return(\r\n                                    <option key={_id}  value={accountName}>{accountName}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Input> \r\n                    {/* if the input on the select is the same with the state , output the detail of the account */}\r\n                    {\r\n                    this.props.accounts.account.map(items=>{\r\n                        const {_id, startingAmount, accountName} = items\r\n                        return items.accountName === this.state.account &&\r\n                            // deconstruct\r\n                            (\r\n                            <div key={_id} style={{marginTop:\"5px\"}}>\r\n                                <p>Account Name:<span style={{float:\"right\"}}>{accountName}</span></p> \r\n                                <p>Starting Amount:<span style={{float:\"right\"}}>{startingAmount}</span></p> \r\n                                {/* i am getting the balance because i subtract starting amount to the reduced expense that is found in the expense */}\r\n                                {/* the color of the balance will be red if negative , green if positive */}\r\n                                <p>Balance:<span style={{color: startingAmount - totalExpense +totalIncome<= 0 ? \"red\": \"rgb(47, 151, 47)\", float:\"right\"}}>{startingAmount - totalExpense + totalIncome}</span></p> \r\n                                {/* delete the account permanently */}\r\n                                <div className=\"ui animated negative button mini\" tabIndex=\"0\">\r\n                                    <div className=\"visible content\">Delete Account</div>\r\n                                    <div className=\"hidden content\" onClick={this.delete.bind(this,_id)}>\r\n                                        <i className=\"user times icon\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                {/* if the account on the expense reducer matches the account state here,\r\n                                the expenses saved on the account's name will be displayed under his/her name only */}\r\n                                <hr/>\r\n                                <h1 style={{textAlign: \"center\"}}>Transactions</h1>\r\n                                {/* this is the list of transactions under the name that matches the input select */}\r\n                                <h4 style={{color:\"red\" , border:\"1px dashed red\", padding:\"10px\", textAlign:\"center\"}}>Expense </h4> \r\n                                {expenseDisplay}\r\n                                <h4 style={{color:\"green\" , border:\"1px dashed green\", padding:\"10px\",  textAlign:\"center\"}}>Income </h4>\r\n                                {incomeDisplay}\r\n                                {/* i passed accountName state as a props. This is to be used for sending post to add transaction */}\r\n                                <br/>\r\n                                <br/>\r\n                                <AddTransaction accountName={accountName} />\r\n                            </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Button className=\"button-margin\" onClick={this.handleHideAccountData}>Close</Button>\r\n                </FormGroup>\r\n         // ==================================================================\r\n\r\n        const { showAccounts } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"button-margin\">\r\n                    <button className=\"ui basic button\" onClick={this.handleShowAccounts} disabled={showAccounts}>Select Account <i style={{marginLeft:\"5px\"}} className=\"users icon\"></i></button> \r\n                </div>\r\n                {/* if clicked ,show form and then disable the button */}\r\n                {showAccounts? showAccountData : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    accounts: state.accountReducer,\r\n    expenses: state.expenseReducer,\r\n    incomes:  state.incomeReducer\r\n})\r\n\r\nexport default connect(mapStateToProps,{itemsLoading, getAccounts,deleteAccount,getExpenses, deleteExpense, getIncomes,deleteIncome})(ShowAccount)","import React, { Component } from 'react'\r\nimport CreateAccount from \"./CreateAccount\"\r\nimport ShowAccount from \"./ShowAccount\"\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <CreateAccount/>\r\n                <ShowAccount/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Home)","import React, { Component } from 'react';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport swal from \"sweetalert\"\r\nimport Home from \"./components/Home\"\r\nimport{\r\n    BrowserRouter,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\"\r\nimport \"./app.css\"\r\n\r\nexport default class App extends Component {\r\n    componentDidMount(){\r\n        swal({\r\n            title:\"Welcome To Expense Tracker App!\",\r\n            text: \"Expense Tracker App is a MERN app I made a couple of months ago. I studied a little bit of backend with the help of MongoDB and Node JS. This helped me accomplished this simple app which basically just computes the balance by adding incomes and subtracting expenses to the starting balance. The user can also create multiple accounts with different starting budgets. Studying backend development , compared to front-end , is a pain but I somehow managed to finished this app and put some tweaks in my code.   \",\r\n            icon:\"info\",\r\n            button: \"Next\"\r\n        }).then(()=>{\r\n            swal({\r\n                title:\"The reason I created this app?\",\r\n                text: \"I want to emphasize my understanding on React JS especially on conditional rendering and state management using Redux and local states. I also used some Javascript array methods like .map , .filter and .reduce which is very useful when it comes to set of data. I also made a simple design which is neat and minimal for the user.Lastly, I demonstrated how can I use different CSS frameworks and CSS principles to create a single page app. \",\r\n                icon:\"success\",\r\n                button: \"Proceed to the App\"\r\n            })\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Provider store={store}>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                    </Provider>\r\n                </Switch>\r\n            </BrowserRouter>\r\n\r\n        )\r\n    }\r\n}\r\n// {/* \r\n// //  // <Router>\r\n// //  <Provider store={store}> */}\r\n//  {/* <Switch> */}\r\n//       {/* <Route path=\"/\" exact component={Home}/> */}\r\n//       {/* <Route path=\"/\" exact component={AccountForm}/> */}\r\n//       {/* <Route path=\"/account\" exact component={accountList}/> */}\r\n//   {/* </Switch> */}\r\n// {/* // </Provider> */}\r\n// // {/* </Router> */}","// Comment out this if you have to use redux\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render( \n    <App/>, \ndocument.getElementById('root'));\n\n// =========================================================================================================\n// to use redux , uncomment this out\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Practice from './reactRouterProject/App';\n// // store\n// import { createStore } from \"redux\"\n// // provider\n// import { Provider } from \"react-redux\"\n// // reducer\n// import rootReducer from \"./reactRouterProject/reducer/rootReducer\"\n\n// const store = createStore(rootReducer);\n\n// ReactDOM.render( \n//     <Provider store={store}><Practice/></Provider>, \n// document.getElementById('root'));\n\n// ===================================================================================================\n// redux for dev ed\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Practice from './react-redux-product-compute/App';\n// // store\n// import { createStore } from \"redux\"\n// // provider\n// import { Provider } from \"react-redux\"\n// // reducer \n// // import rootReducer from \"./react-redux-product-compute/reducer/rootReducer\"\n// // combined reducer \n// import rootReducer from \"./react-redux-product-compute/reducer/rootReducer\"\n\n// const store = createStore(rootReducer);\n\n// ReactDOM.render( \n//     <Provider store={store}><Practice/></Provider>, \n// document.getElementById('root'));\n\n"],"sourceRoot":""}